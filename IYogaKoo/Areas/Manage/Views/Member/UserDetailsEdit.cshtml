@model IYogaKoo.ViewModel.ViewYogaUserDetail

@{
    ViewBag.Title = "UserDetailsEdit";
    Layout = "~/Areas/Manage/Views/Shared/_Master.cshtml";
}

<h2>UserDetailsEdit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>ViewYogaUserDetail</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.UID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UID)
            @Html.ValidationMessageFor(model => model.UID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RealName_cn)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RealName_cn)
            @Html.ValidationMessageFor(model => model.RealName_cn)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.IsRealName_cn)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsRealName_cn" name="IsRealName_cn" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RealName_en)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RealName_en)
            @Html.ValidationMessageFor(model => model.RealName_en)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsRealName_en)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsRealName_en" name="IsRealName_en" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="editor-field"> 
            @Html.RadioButtonFor(model => model.Gender, 1)男
            @Html.RadioButtonFor(model => model.Gender, 0)女 
            @Html.ValidationMessageFor(model => model.Gender)
        </div>
       
        <div class="editor-label">
            @Html.LabelFor(model => model.BirthYear)
        </div>
        <div class="editor-field">
            <input id="BirthYear" name="BirthYear" type="text" onfocus="WdatePicker({skin:'default',dateFmt:'yyyy'})" class="Wdate" style=" width:80px;" />
           
            @Html.ValidationMessageFor(model => model.BirthYear)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsBirthYear)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsBirthYear" name="IsBirthYear" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BirthMonth)
        </div>
        <div class="editor-field">
            <input id="BirthMonth" name="BirthMonth" type="text" onfocus="WdatePicker({skin:'default',dateFmt:'MM'})" class="Wdate" style=" width:80px;" />

            @Html.ValidationMessageFor(model => model.BirthMonth)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsBirthMonth)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsBirthMonth" name="IsBirthMonth" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BirthDay)
        </div>
        <div class="editor-field">
            <input id="BirthDay" name="BirthDay" type="text" onfocus="WdatePicker({skin:'default',dateFmt:'dd'})" class="Wdate" style=" width:80px;" />

            @Html.ValidationMessageFor(model => model.BirthDay)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsBirthDay)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsBirthDay" name="IsBirthDay" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Nationality)
        </div>
        <div class="editor-field">
            <select id="ddlNationality" name="ddlNationality">
                <option value="0">请选择国籍</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsNationality)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsNationality" name="IsNationality" />
        </div>

        <div class="editor-label">
            <label>所在地区</label>
        </div>
        <div class="editor-field">
            <select id="ddlCountryID" name="ddlCountryID">
                <option value="-1">请选择国家</option>
            </select> 
            <select id="ddlProvinceID" name="ddlProvinceID">
                <option value="0">请选择省份</option>
            </select>
            <select id="ddlCityID" name="ddlCityID" style="">
                <option value="0">请选择城市</option>
            </select>
            <select id="ddlDistrictID" name="ddlDistrictID" style="">
                <option value="0">请选择城区</option>
            </select>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Street)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Street)
            @Html.ValidationMessageFor(model => model.Street)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LocationID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LocationID)
            @Html.ValidationMessageFor(model => model.LocationID)
        </div>
         
        <div class="editor-label">
            @Html.LabelFor(model => model.MSN)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MSN)
            @Html.ValidationMessageFor(model => model.MSN)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsMsn)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsMsn" name="IsMsn" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QQ)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QQ)
            @Html.ValidationMessageFor(model => model.QQ)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsQQ)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsQQ" name="IsQQ" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Postal)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Postal)
            @Html.ValidationMessageFor(model => model.Postal)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsPostal)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsPostal" name="IsPostal" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Zip)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Zip)
            @Html.ValidationMessageFor(model => model.Zip)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsZip)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsZip" name="IsZip" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Tel)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Tel)
            @Html.ValidationMessageFor(model => model.Tel)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsTel)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsTel" name="IsTel" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Mobile)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Mobile)
            @Html.ValidationMessageFor(model => model.Mobile)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsMobile)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsMobile" name="IsMobile" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Profile)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Profile)
            @Html.ValidationMessageFor(model => model.Profile)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Weibo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Weibo)
            @Html.ValidationMessageFor(model => model.Weibo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsWeibo)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsWeibo" name="IsWeibo" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PersonalURL)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PersonalURL)
            @Html.ValidationMessageFor(model => model.PersonalURL)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsPersonalURL)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsPersonalURL" name="IsPersonalURL" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartYear)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartYear)
            @Html.ValidationMessageFor(model => model.StartYear)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsUserYogaType)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsUserYogaType" name="IsUserYogaType" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsUserYogaPlace)
        </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsUserYogaPlace" name="IsUserYogaPlace" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsYogisMap)
         </div>
        <div class="editor-field">
            <input type="checkbox" checked="" id="IsYogisMap" name="IsYogisMap" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GudWords)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GudWords)
            @Html.ValidationMessageFor(model => model.GudWords)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DisplayImg)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DisplayImg)
            @Html.ValidationMessageFor(model => model.DisplayImg)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateTime)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.CreateTime)
            @Html.ValidationMessageFor(model => model.CreateTime)
        </div>
        <br /> 
        <div class="editor-label">
            @Html.LabelFor(model => model.IsUserWeeknumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsUserWeeknumber)
            @Html.ValidationMessageFor(model => model.IsUserWeeknumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Ulevel)
        </div>
        <div class="editor-field">
            <select id="Ulevel" name="Ulevel">
                <option value="">--请选择--</option>
                <option value="0">基础习练者</option>
                <option value="1">初级习练者</option>
                <option value="2">中级习练者</option>
                <option value="3">高级习练者</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Uscore)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Uscore)
            @Html.ValidationMessageFor(model => model.Uscore)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AlipayUser)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AlipayUser)
            @Html.ValidationMessageFor(model => model.AlipayUser)
        </div>
         
        <div class="editor-label">
            @Html.LabelFor(model => model.YogaTypeid)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.YogaTypeid)
            <input type="button" id="btnYogaTypeid" value="请选择" class="lb_sc" />
            <input type="hidden" id="hYogaTypeid" name="hYogaTypeid" value="" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.iZan)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.iZan)
            @Html.ValidationMessageFor(model => model.iZan)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Covimg)
        </div>
        <div class="editor-field">
          <img src="@Model.Covimg" width="300" />
            @Html.ValidationMessageFor(model => model.Covimg)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.delState)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.delState)
            @Html.ValidationMessageFor(model => model.delState)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Content/My97DatePicker4.7/WdatePicker.js"></script>
<link href="@Url.Content("~/Content/artDialog4.1.1/_doc/demo.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/artDialog4.1.1/jquery.artDialog.js?skin=blue")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/artDialog4.1.1/artDialog.iframeTools.js")" type="text/javascript"></script>
  
<script type="text/javascript">
    $(function () {

        //封面图片
        $('#btnCover').uploadify({
            'swf': '@Url.Content("~/Content/uploadify/uploadify-v3.1/uploadify.swf")',// 上传使用的 Flash
            'uploader': '@Url.Content("~/Controllers/ashxFile/CoverImg.ashx")',
            'buttonText': '浏览',
            'height': '30',
            'width': '120',
            'fileTypeDesc': '.jpg,.gif,.png',
            'fileTypeExts': '*.jpg;*.gif;*.png;',
            'cancelImg': '~/Content/uploadify/uploadify-v3.1/uploadify-cancel.png',//取消
            'sizeLimit': 1024 * 1024 * 4, //4M
            'multi': false,//设置为true时可以同时上传多个文件。
            'onUploadSuccess': function (file, data, response) {
                if (data.indexOf('文件太大！请上传小于4M的图片！') != -1) {
                    alert(data);
                }
                else {
                    $("#CoverImg").val("/" + data);
                    $("#idpCoverImg").attr("src", "/" + data);
                }
            },
            'onUploadError': function (file, errorCode, errorMsg, errorString) {
                alert('文件：' + file.name + ' 上传失败: ' + errorCode + errorString);
            }
        });

    });
 
</script>

<script type="text/javascript">
    ///弹出头像设置
    $(function () {
        $("#IsRealName_cn").attr("checded", "checked");
        $("#BirthYear").bind("focus click", function () {
            //WdatePicker();
            WdatePicker({ startDate: '%y', dateFmt: 'yyyy', alwaysUseStartDate: true });
        });

    });
  
    $("#btnYogaTypeid").click(function () {
       
        art.dialog.open('/Login/LoadYogaTypeidList', {
            title: '选择流派',
            lock: true,
            width: 600,
            hight: 400,
            close: function () {
                var ID = art.dialog.data('ID', ID);
                var ItemName = art.dialog.data('ItemName', ItemName);

                if (ID !== undefined) {
                    document.getElementById('hYogaTypeid').value = ID;
                }
                if (ItemName !== undefined) {
                    document.getElementById('YogaTypeid').value = ItemName;//显示名称
                }
            }
        });
    });
     
</script>

<script type="text/javascript">
    // 国家事件
    $('#ddlCountryID').click(function () {

        var strGuoJia = $(this).val();
        if (strGuoJia != "0") {
            document.getElementById("ddlProvinceID").innerHTML = "";
            //加载省
            $.ajax({
                url: '/Login/GetAreaInfo?id=' + strGuoJia,
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    $("#ddlProvinceID").html("<option value='0'>请选择</option>");
                    $("#ddlCityID").html("<option value='0'>请选择</option>");
                    $("#ddlDistrictID").html("<option value='0'>请选择</option>");
                    for (var i = 0; i < data.length; i++) {

                        $("#ddlProvinceID").append("<option value='" + data[i].ID + "'>" + data[i].ItemName + "</option>");

                    };
                }
            });
        }
    });
    //省事件
    $("#ddlProvinceID").click(function () {

        var strSheng = $(this).val();
        if (strSheng != "0") {
            document.getElementById("ddlCityID").innerHTML = "";
            //加载市
            $.ajax({
                url: '/Login/GetAreaInfo?id=' + strSheng,
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    $("#ddlCityID").html("<option value='0'>请选择</option>");
                    $("#ddlDistrictID").html("<option value='0'>请选择</option>");
                    for (var i = 0; i < data.length; i++) {

                        $("#ddlCityID").append("<option value='" + data[i].ID + "'>" + data[i].ItemName + "</option>");

                    };
                }
            });
        }
    });
    //城市事件
    $("#ddlCityID").click(function () {

        var strShi = $(this).val();
        if (strShi != "0") {
            document.getElementById("ddlDistrictID").innerHTML = "";
            //加载城区
            $.ajax({
                url: '/Login/GetAreaInfo?id=' + strShi,
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    $("#ddlDistrictID").html("<option value='0'>请选择</option>");
                    for (var i = 0; i < data.length; i++) {

                        $("#ddlDistrictID").append("<option value='" + data[i].ID + "'>" + data[i].ItemName + "</option>");

                    };
                }
            });
        }
    });
    //-------------------------------------------------------------------

    $(function () {
       
        //$("#YogaTypeid").val('');
        $("#hYogaTypeid").val($("#hidYogaTypeid").val());
         
        //国籍
        var strNationality = $("#hNationality").val();
        //alert(strNationality);
        $("#Nationality").val(strNationality);

        $.ajax({
            url: '/Login/GetNationalityInfo?t=' + Math.random(),
            type: 'post',
            datatype: 'json',
            success: function (data) {
                for (var i = 0; i < data.length; i++) {

                    if (data[i].ID == $("#hNationality").val()) {
                        $("#ddlNationality").append("<option value='" + data[i].ID + "'  selected='selected' >" + data[i].ItemName + "</option>");
                    } else {
                        $("#ddlNationality").append("<option value='" + data[i].ID + "'>" + data[i].ItemName + "</option>");
                    }
                };
            }
        });
        //国家
        var strCountryID = $("#hCountryID").val();
        $("#CountryID").val(strCountryID);

        //if (strCountryID != "0") {
        $.ajax({
            url: '/Login/GetCountryInfo?t=' + Math.random(),
            type: 'post',
            datatype: 'json',
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    if (data[i].ID == $("#hCountryID").val()) {
                        $("#ddlCountryID").append("<option value='" + data[i].ID + "'  selected='selected' >" + data[i].ItemName + "</option>");
                    } else {
                        $("#ddlCountryID").append("<option value='" + data[i].ID + "'>" + data[i].ItemName + "</option>");
                    }
                };
            }
        });
        // }
        //省

        if ($("#hProvinceID").val() != "0") {

            $.ajax({
                url: '/Login/GetAreaInfo?id=' + strCountryID,
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].ID == $("#hProvinceID").val()) {
                            $("#ddlProvinceID").append("<option value='" + data[i].ID + "'  selected='selected' >" + data[i].ItemName + "</option>");
                        } else {
                            $("#ddlProvinceID").append("<option value='" + data[i].ID + "'>" + data[i].ItemName + "</option>");
                        }
                    };
                }
            });
        }
        var strProvinceID = $("#hProvinceID").val();
        if (strProvinceID != "0") {
            $.ajax({
                url: '/Login/GetAreaInfo?id=' + strProvinceID,
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].ID == $("#hCityID").val()) {
                            $("#ddlCityID").append("<option value='" + data[i].ID + "'  selected='selected' >" + data[i].ItemName + "</option>");
                        } else {
                            $("#ddlCityID").append("<option value='" + data[i].ID + "'>" + data[i].ItemName + "</option>");
                        }
                    };
                }
            });
        }
        var strCityID = $("#hCityID").val();
        if (strCityID != "0") {
            $.ajax({
                url: '/Login/GetAreaInfo?id=' + strCityID,
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].ID == $("#hDistrictID").val()) {
                            $("#ddlDistrictID").append("<option value='" + data[i].ID + "' selected='selected' >" + data[i].ItemName + "</option>");
                        } else {
                            $("#ddlDistrictID").append("<option value='" + data[i].ID + "'>" + data[i].ItemName + "</option>");
                        }
                    };
                }
            });
        }

    });
</script>


}
